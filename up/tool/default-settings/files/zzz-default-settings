#!/bin/sh
ver=$(uci -q get base_config.@base[0].ver 2>/dev/null)
test -n "$ver" || {
touch /etc/config/base_config
uci -q add base_config base >/dev/null 2>&1
ver=0
}
[ `mount | grep /boot |wc -l` -gt 1 ] && umount /boot
#argon
sed -i 's,media .. \"\/b,resource .. \"\/b,g' /usr/lib/lua/luci/view/themes/argon/sysauth.htm
uci -q set luci.main.lang='auto'
uci -q set luci.main.mediaurlbase='/luci-static/kucat'

is_x86_64() {
    DISTRIB_ARCH=$(cat /etc/openwrt_release | grep "DISTRIB_ARCH" | cut -d "'" -f 2)
    if [ "$DISTRIB_ARCH" = "x86_64" ]; then
        return 0
    else
        return 1
    fi
}

is_vip() {
     DISTRIB_FREE=$(cat /etc/ezopenwrt_version | grep "Vip" | cut -d " " -f 2 | cut -d "-" -f 1)
    if [ "$DISTRIB_FREE" = "Vip" ]; then
        return 0
    else
        return 1
    fi
}

# stop avahi cups
# /etc/init.d/avahi-daemon disable  && /etc/init.d/avahi-daemon stop  
debug=0
setup_ssid()
{
COUNTRY='US'
CH50=149
CH24=11
HWMODE50='11a'
HWMODE24='11b'
HTMODE50='VHT80'
HTMODE24='HT20'
NETWORKID=lan
local r="$1"
uci -q delete wireless.default_${r}
 if ! uci show wireless.${r} >/dev/null 2>&1; then
        return
 fi
    SUBFIX=`echo -n $MACADDR | sed 's/://g' | tr a-z A-Z | tail -c4`
    SSID=${DISTRIB_ID}_${SUBFIX}
    # local s="wlan$1"
    #local mac=`ifconfig ${s} | grep "HWaddr" | awk '{print $5}'`
    #local wifimac=`echo ${mac}|awk -F ":" '{print $4""$5""$6 }'|tr A-Z a-z|cut -c4-`
    uci -q set wireless.${r}.disabled=0
    uci -q set wireless.${r}.country=${COUNTRY}
    uci -q set wireless.${r}.legacy_rates='1'
    uci -q set wireless.${r}.mu_beamformer='1'
    uci -q set wireless.${r}.bursting='1'
    uci -q set wireless.${r}.ff='1'
    uci -q set wireless.${r}.compression='1'
    uci -q set wireless.${r}.noscan='0'
    uci -q set wireless.${r}.txpower='20'
    if [ `uci -q get wireless.${r}.channel` -lt 14 ]; then
        uci -q set wireless.${r}.channel=${CH24}
        uci -q set wireless.${r}.htmode=${HTMODE24}
        uci -q set wireless.${r}.hwmode=${HWMODE24}
        uci -q set wireless.${NETWORKID}_${r}.ssid="${SSID}"
        logger "default-wifi: set $1 -- ssid:${SSID} -- password:${SSID_PASSWD}"
    else
        uci -q set wireless.${r}.channel=${CH50}
        uci -q set wireless.${r}.htmode=${HTMODE50}
        uci -q set wireless.${r}.hwmode=${HWMODE50}
        uci -q set wireless.${NETWORKID}_${r}.ssid="${SSID}"_5G
        logger "default-wifi: set $1 -- ssid:${SSID}_5G -- password:${SSID_PASSWD}"
    fi
    uci -q set wireless.${NETWORKID}_${r}=wifi-iface
    uci -q set wireless.${NETWORKID}_${r}.device=${r}
    uci -q set wireless.${NETWORKID}_${r}.network=${NETWORKID}
    uci -q set wireless.${NETWORKID}_${r}.mode='ap'
    uci -q set wireless.${NETWORKID}_${r}.disassoc_low_ack='0'
    uci -q set wireless.${NETWORKID}_${r}.encryption='psk2+ccmp'
    uci -q set wireless.${NETWORKID}_${r}.wps_pushbutton='0'
    uci -q set wireless.${NETWORKID}_${r}.isolate='0'
    uci -q set wireless.${NETWORKID}_${r}.key="${SSID_PASSWD}"
    uci -q commit wireless
}
setup_network()
{
. /lib/functions/uci-defaults.sh
ETHNUM=$(ls /sys/class/net/ | grep eth | wc -l)
if [ $ETHNUM == 1 ]; then
    ucidef_set_interface_lan 'eth0'
    uci -q set network.lan.proto='static'
else
    [ -d /sys/class/net/eth1 ] && ucidef_set_interface_wan 'eth1'
    interface=""
    for eth_interface in /sys/class/net/eth*
    do
        [ "$eth_interface" != "/sys/class/net/eth1" ] && interface=$interface" "${eth_interface##*/}
    done
    if [ -n "$interface" ]; then
        interface=$(echo "$interface" | sed 's/^ *//')
        ucidef_set_interface_lan "$interface"
    fi
fi
}

. /etc/openwrt_release
test -n "${DISTRIB_ID}" || DISTRIB_ID=EzOpWrt
DISTRIB_ID=$(echo -n $DISTRIB_ID | tr a-z A-Z)
uci -q set fstab.@global[0].check_fs=1
MACADDR=""
test -e /usr/share/natcapd/board_mac.lua && MACADDR=$(lua /usr/share/natcapd/board_mac.lua)
test -n "$MACADDR" || MACADDR=$(. /lib/functions/system.sh; get_mac_label | tr a-f A-F)
test -n "$MACADDR" || MACADDR=$(cat /etc/board.json | jsonfilter -e "$['network']['wan']['macaddr']" | tr a-f A-F)
test -n "$MACADDR" || MACADDR=$(cat /etc/board.json | jsonfilter -e "$['network']['lan']['macaddr']" | tr a-f A-F)
test -n "$MACADDR" || MACADDR=$(cat /sys/class/net/eth0/address | tr a-f A-F)
test -n "$MACADDR" || MACADDR=$(cat /sys/class/net/eth1/address | tr a-f A-F)
test -n "$MACADDR" || MACADDR=$(head -c6 /dev/urandom | hexdump -e '/1 "%02X:"' | head -c17)
test -n "$MACADDR" || MACADDR=$(head -c6 /dev/random | hexdump -e '/1 "%02X:"' | head -c17)
SSID_PASSWD=88888888
sed -i '/option disabled/d' /etc/config/wireless  >/dev/null 2>&1
sed -i '/set wireless.radio${devidx}.disabled/d' /lib/wifi/mac80211.sh   >/dev/null 2>&1
wifi up

#wifi net
test $ver -lt 1 && {
    ver=1
    if [ `find /sys/class/net/ -name wlan* | wc -l` -gt 0 ]; then
      for i in radio0 radio1 radio2 radio3 wifi0 wifi1 wifi2 wifi3; do
            setup_ssid ${i}
        done
    fi
    sed -i '/option disabled/d' /etc/config/wireless  >/dev/null 2>&1
    sed -i '/set wireless.radio${devidx}.disabled/d' /lib/wifi/mac80211.sh   >/dev/null 2>&1

    uci -q set network.lan.ipaddr='192.168.10.1'
    uci del dhcp.lan.ignore
    uci del dhcp.lan.ra_slaac
    uci del network.lan.delegate
    uci -q set network.lan.proto='static'
    setup_network
    uci -q commit network
    sed -i '/lcp-echo/d' /etc/ppp/options
    echo "lcp-echo-failure 10" >>  /etc/ppp/options 
    echo "lcp-echo-interval 200" >>  /etc/ppp/options
    [ x$debug = x1 ] && uci -q set base_config.@base[0].base$ver=$?;echo $ver
}
#ssh link
test $ver -lt 2 && {
frmware=`cat /etc/ezopenwrt_version | awk -F '-' '{printf $2}'`

[ -f '/usr/lib/lua/luci/view/admin_status/index/ddns.htm' ] &&rm -f /usr/lib/lua/luci/view/admin_status/index/ddns.htm
[ -f '/usr/lib/lua/luci/view/admin_status/index/minidlna.htm' ] &&rm -f /usr/lib/lua/luci/view/admin_status/index/minidlna.htm
[ -f '/usr/lib/lua/luci/view/admin_status/index/mwan.htm' ] &&rm -f /usr/lib/lua/luci/view/admin_status/index/mwan.htm
[ -f '/usr/lib/lua/luci/view/admin_status/index/upnp.htm' ] &&rm -f /usr/lib/lua/luci/view/admin_status/index/upnp.htm
ver=2

uci -q set system.@system[0].hostname='EzOpWrt'
uci -q commit system
sed -i 's/root.*/root::0:0:99999:7:::/g' /etc/shadow

uci -q batch <<-EOF
set system.@system[0].timezone=CST-8
set system.@system[0].zonename=Asia/Shanghai
set system.@system[0].ttylogin='1'
delete system.ntp.server
add_list system.ntp.server='time1.cloud.tencent.com'
add_list system.ntp.server='ntp1.aliyun.com'
add_list system.ntp.server='ntp.ntsc.ac.cn'
add_list system.ntp.server='cn.ntp.org.cn'
set dhcp.@dnsmasq[0].min_ttl='3600'
set dhcp.@dnsmasq[0].filter_aaaa='0'
set dhcp.@dnsmasq[0].localservice='0'
set dhcp.@dnsmasq[0].nonwildcard='0'
set dhcp.@dnsmasq[0].port='53'
set fstab.@global[0].anon_mount=1
set fstab.@global[0].check_fs=1
set vsftpd.@listen[0].enable4='0'
set upnpd.config.enabled='0'
set upnpd.config.igdv1='1'
set mwan3.wan.enabled='0'
EOF

if [ $frmware = Plus ] ;then
uci -q batch <<-EOF
set dhcp.lan.ndp=''
set dhcp.lan.ra='hybrid'
set dhcp.lan.dhcpv6='hybrid'
set dhcp.lan.ignore='0'
set dhcp.lan.ra_management='1'
set dhcp.lan.ra_default='1'
set dhcp.lan.force='1'
set network.lan.delegate='0'
set network.wan.mtu=1420
set network.wan.metric='41'
set network.wan.delegate='0'
set network.wan.ipv6='auto'
set turboacc.config.fullcone_nat='1'
set turboacc.config.bbr_cca='0'
set turboacc.config.sfe_flow='0'
set turboacc.config.hw_flow='0'
set turboacc.config.sw_flow='0'

EOF
sed -i 's/services/nas/g' /usr/lib/lua/luci/controller/aria2.lua
sed -i 's/services/nas/g' /usr/lib/lua/luci/view/aria2/overview_status.htm
sed -i 's/services/nas/g' /usr/lib/lua/luci/controller/hd_idle.lua
sed -i 's/services/nas/g' /usr/lib/lua/luci/controller/minidlna.lua
sed -i 's/services/nas/g' /usr/lib/lua/luci/controller/transmission.lua
sed -i 's/services/nas/g' /usr/lib/lua/luci/controller/mjpg-streamer.lua
sed -i 's/services/nas/g' /usr/lib/lua/luci/controller/p910nd.lua
sed -i 's/services/nas/g' /usr/lib/lua/luci/controller/usb_printer.lua
sed -i 's/services/nas/g' /usr/lib/lua/luci/controller/xunlei.lua
sed -i 's/services/nas/g' /usr/lib/lua/luci/controller/cifs.lua
sed -i 's/services/nas/g'  /usr/lib/lua/luci/view/minidlna_status.htm
sed -i 's/services/vpn/g' /usr/lib/lua/luci/controller/zerotier.lua   #zerotier
sed -i 's/services/vpn/g' /usr/lib/lua/luci/view/zerotier/zerotier_status.htm   #zerotier
sed -i 's/services/vpn/g' /usr/share/luci/menu.d/luci-app-zerotier.json
sed -i 's/services/nas/g' /usr/lib/lua/luci/controller/samba4.lua
sed -i 's/services/nas/g' /usr/share/luci/menu.d/luci-app-samba4.json
sed -i 's/services/nas/g' /usr/share/luci/menu.d/luci-app-gowebdav.json
sed -i 's/services/nas/g' /usr/share/luci/menu.d/luci-app-qbittorrent.json
sed -i 's/services/nas/g' /usr/lib/lua/luci/controller/alist.lua
sed -i 's/services/nas/g' /usr/share/luci/menu.d/luci-app-alist.json
sed -i 's/services/nas/g' /usr/lib/lua/luci/view/alist/alist_status.htm
sed -i 's/services/nas/g' /usr/lib/lua/luci/view/alist/admin_info.htm

elif  [ $frmware = Bypass ] ;then
uci -q batch <<-EOF
set dhcp.lan.ra=''
set dhcp.lan.ndp=''
set dhcp.lan.dhcpv6=''
set dhcp.lan.ignore='0'
set dhcp.lan.ra_management='1'
set dhcp.lan.ra_default='1'
set dhcp.lan.force='1'
set network.lan.delegate='0'
set network.lan.proto='static'
del dhcp.lan.ignore
del dhcp.lan.dynamicdhcp
set dhcp.lan.force='1'
delete network.wan
delete network.wan6
set turboacc.config.sw_flow='0'
EOF

sed -i 's/services/nas/g' /usr/lib/lua/luci/controller/aria2.lua
sed -i 's/services/nas/g' /usr/lib/lua/luci/view/aria2/overview_status.htm
sed -i 's/services/nas/g' /usr/lib/lua/luci/controller/hd_idle.lua
sed -i 's/services/nas/g' /usr/lib/lua/luci/controller/minidlna.lua
sed -i 's/services/nas/g' /usr/lib/lua/luci/controller/transmission.lua
sed -i 's/services/nas/g' /usr/lib/lua/luci/controller/mjpg-streamer.lua
sed -i 's/services/nas/g' /usr/lib/lua/luci/controller/p910nd.lua
sed -i 's/services/nas/g' /usr/lib/lua/luci/controller/usb_printer.lua
sed -i 's/services/nas/g' /usr/lib/lua/luci/controller/xunlei.lua
sed -i 's/services/nas/g' /usr/lib/lua/luci/controller/cifs.lua
sed -i 's/services/nas/g'  /usr/lib/lua/luci/view/minidlna_status.htm
sed -i 's/services/vpn/g' /usr/lib/lua/luci/controller/zerotier.lua   #zerotier
sed -i 's/services/vpn/g' /usr/lib/lua/luci/view/zerotier/zerotier_status.htm   #zerotier
sed -i 's/services/vpn/g' /usr/share/luci/menu.d/luci-app-zerotier.json
sed -i 's/services/nas/g' /usr/lib/lua/luci/controller/samba4.lua
sed -i 's/services/nas/g' /usr/share/luci/menu.d/luci-app-samba4.json
sed -i 's/services/nas/g' /usr/share/luci/menu.d/luci-app-gowebdav.json
sed -i 's/services/nas/g' /usr/share/luci/menu.d/luci-app-qbittorrent.json
sed -i 's/services/nas/g' /usr/lib/lua/luci/controller/alist.lua
sed -i 's/services/nas/g' /usr/share/luci/menu.d/luci-app-alist.json
sed -i 's/services/nas/g' /usr/lib/lua/luci/view/alist/alist_status.htm
sed -i 's/services/nas/g' /usr/lib/lua/luci/view/alist/admin_info.htm
else

uci -q batch <<-EOF
set dhcp.lan.ra='hybrid'
set dhcp.lan.dhcpv6='hybrid'
set dhcp.lan.ndp=''
set dhcp.lan.ignore='0'
set dhcp.lan.ra_management='1'
set dhcp.lan.ra_default='1'
set dhcp.lan.force='1'
set network.lan.delegate='0'
set network.wan.mtu=1420
set network.wan.metric='41'
set network.wan.delegate='0'
set network.wan.ipv6='auto'
set turboacc.config.sw_flow='0'
EOF
sed -i 's/nas/services/g' /usr/lib/lua/luci/controller/cifs.lua
sed -i 's/nas/services/g' /usr/lib/lua/luci/controller/zerotier.lua   #zerotier
sed -i 's/nas/services/g' /usr/lib/lua/luci/view/zerotier/zerotier_status.htm   #zerotier
sed -i 's/nas/services/g' /usr/share/luci/menu.d/luci-app-zerotier.json
sed -i 's/nas/services/g' /usr/lib/lua/luci/controller/samba4.lua
sed -i 's/nas/services/g' /usr/share/luci/menu.d/luci-app-samba4.json
sed -i 's/nas/services/g' /usr/share/luci/menu.d/luci-app-gowebdav.json
sed -i 's/nas/services/g' /usr/share/luci/menu.d/luci-app-qbittorrent.json
sed -i 's/nas/services/g' /usr/lib/lua/luci/controller/alist.lua
sed -i 's/nas/services/g' /usr/share/luci/menu.d/luci-app-alist.json
sed -i 's/nas/services/g' /usr/lib/lua/luci/view/alist/alist_status.htm
sed -i 's/nas/services/g' /usr/lib/lua/luci/view/alist/admin_info.htm
fi
uci -q commit vsftpd
uci -q commit luci
uci -q commit fstab
uci -q commit upnpd
uci -q commit dhcp
uci -q commit fstab
uci -q commit turboacc
uci -q commit network
uci -q commit system
uci -q commit firewall
uci -q commit mwan3
[ x$debug = x1 ] && uci -q set base_config.@base[0].base$ver=$?;echo $ver
}

sed -i '/coremark/d' /etc/crontabs/root
ln -sf /sbin/ip /usr/bin/ip
# Disable opkg signature check
sed -i 's/option check_signature/# option check_signature/g' /etc/opkg.conf
new_DISTRIB_REVISION=`cat  /etc/ezopenwrt_version`
sed -i '/DISTRIB_DESCRIPTION/d' /etc/openwrt_release
sed -i '/DISTRIB_REVISION/d' /etc/openwrt_release
echo "DISTRIB_DESCRIPTION='"${new_DISTRIB_REVISION}"'" >> /etc/openwrt_release
sed -i '/OPENWRT_RELEASE/d' /etc/os-release
echo "OPENWRT_RELEASE='"${new_DISTRIB_REVISION}"'" >> /etc/os-release
sed -i 's/immortalwrt/openwrt/g' /etc/config/luci

#tv
test $ver -lt 4 && {
ver=4
HOSTNAME="samsungTV"
TAG="googleDNS"
MAC=""
IPADDR=""
DNS1="8.8.4.4"
DNS2="8.8.8.8"

uci batch <<EOF
  set dhcp.${HOSTNAME}="host"
  set dhcp.${HOSTNAME}.name="${HOSTNAME}"
  set dhcp.${HOSTNAME}.mac="${MAC}"
  set dhcp.${HOSTNAME}.ip="${IPADDR}"
  set dhcp.${HOSTNAME}.tag="${TAG}"
  set dhcp.${TAG}="tag"
  set dhcp.${TAG}.dhcp_option="6,${DNS1},${DNS2}"
EOF

uci -q add dhcp domain
uci -q set "dhcp.@domain[-1].name=time.android.com"
uci -q set "dhcp.@domain[-1].ip=203.107.6.88"
uci -q commit dhcp

[ x$debug = x1 ] && uci -q set base_config.@base[0].base$ver=$? ; echo $ver
}


#distfeeds
test $ver -lt 5 && { 
ver=5

echo "src/gz is_store https://istore.linkease.com/repo/all/store" >/etc/opkg/customfeeds.conf
if is_x86_64; then
cat <<-EOF > /etc/opkg/distfeeds.conf
src/gz ezopwrt_core https://downloads.immortalwrt.org/releases/24.10-SNAPSHOT/targets/x86/64/packages
src/gz ezopwrt_base https://downloads.immortalwrt.org/releases/24.10-SNAPSHOT/packages/x86_64/base
src/gz ezopwrt_luci https://downloads.immortalwrt.org/releases/24.10-SNAPSHOT/packages/x86_64/luci
src/gz ezopwrt_packages https://downloads.immortalwrt.org/releases/24.10-SNAPSHOT/packages/x86_64/packages
src/gz ezopwrt_routing https://downloads.immortalwrt.org/releases/24.10-SNAPSHOT/packages/x86_64/routing
src/gz ezopwrt_telephony https://downloads.immortalwrt.org/releases/24.10-SNAPSHOT/packages/x86_64/telephony
EOF
else
cat <<-EOF > /etc/opkg/distfeeds.conf
src/gz ezopwrt_core https://downloads.immortalwrt.org/releases/24.10-SNAPSHOT/targets/rockchip/armv8/packages
src/gz ezopwrt_base https://downloads.immortalwrt.org/releases/24.10-SNAPSHOT/packages/aarch64_generic/base
src/gz ezopwrt_luci https://downloads.immortalwrt.org/releases/24.10-SNAPSHOT/packages/aarch64_generic/luci
src/gz ezopwrt_packages https://downloads.immortalwrt.org/releases/24.10-SNAPSHOT/packages/aarch64_generic/packages
src/gz ezopwrt_routing https://downloads.immortalwrt.org/releases/24.10-SNAPSHOT/packages/aarch64_generic/routing
src/gz ezopwrt_telephony https://downloads.immortalwrt.org/releases/24.10-SNAPSHOT/packages/aarch64_generic/telephony
EOF

fi
}

#tv
test $ver -lt 6 && { 
ver=6

uci -q delete ttyd.@ttyd[0].interface
    if [[ -e /etc/config/ttyd ]]; then
        uci -q batch <<-EOF >/dev/null
            delete ttyd.@ttyd[0].interface
EOF
    fi
    for samba in samba4 samba ; do
        if [ -e /etc/config/$samba ]; then
            uci -q batch <<-EOF >/dev/null
                set $samba.@samba[0].interface='lan wan'
                commit $samba
EOF
        fi
    done
    
uci -q set dropbear.@dropbear[0].Interface=''
uci -q commit dropbear

# docker mirror
if [[ -f /etc/config/dockerd ] && [ $(grep -c daocloud.io /etc/config/dockerd) -eq '0' ]]; then
    uci -q add_list dockerd.globals.registry_mirrors="https://docker.m.daocloud.io"
    WAN_ZONE=`uci show firewall | grep -E '^firewall\.@zone\[[0-9]+\]\.name='"'wan'" | head -n1 | head -c -12`
    uci -q batch <<-EOF >/dev/null
        del_list dockerd.firewall.blocked_interfaces=wan
        set ${WAN_ZONE}.input=ACCEPT
        commit firewall
EOF
uci -q batch <<-EOF >/dev/null
    commit dockerd
EOF
fi

uci -q batch <<-EOF >/dev/null
    set luci.apply.rollback=30
    set luci.apply.holdoff=2
    commit luci
EOF

if [[ -f /etc/config/nginx ]] ;then

uci -q batch <<-EOF >/dev/null
 set nginx.global.uci_enable='true'
 del nginx._lan
 del nginx._redirect2ssl
 add nginx server
 rename nginx.@server[0]='_lan'
 set nginx._lan.server_name='_lan'
 add_list nginx._lan.listen='80 default_server'
 add_list nginx._lan.listen='[::]:80 default_server'
# add_list nginx._lan.include='restrict_locally'
 add_list nginx._lan.include='conf.d/*.locations'
 set nginx._lan.access_log='off; # logd openwrt'
 commit nginx
EOF
service nginx restart
fi

if [[ -f /etc/config/snmpd ]] ;then

uci -q batch <<-EOF >/dev/null
set snmpd.default_settings=snmpd
set snmpd.default_settings.agentaddress='udp:127.0.0.1,udp6:[::1]:161'
 set snmpd.default_settings.community='public'
 set snmpd.default_settings.version='v2c'
 commit snmpd
EOF
fi
}

[ -f '/etc/init.d/miniupnpd' ] &&/etc/init.d/miniupnpd restart
[ -f '/etc/init.d/turboacc' ] &&/etc/init.d/turboacc restart
[ -f '/etc/init.d/ttyd' ] &&/etc/init.d/ttyd restart
[ -f '/etc/init.d/mwan3' ] &&/etc/init.d/mwan3 restart
# [ -f '/etc/init.d/netwizard' ] &&/etc/init.d/netwizard restart
/etc/init.d/system restart
/etc/init.d/network restart
/etc/init.d/dnsmasq restart
uci -q set base_config.@base[0].ver=$ver
uci -q commit base_config
ntpd -n -q -p 1.lede.pool.ntp.org
sed -i '/log-facility/d' /etc/dnsmasq.conf
echo "log-facility=/dev/null" >> /etc/dnsmasq.conf
echo 'hsts=0' > /root/.wgetrc
rm -rf /tmp/luci-*

exit 0
